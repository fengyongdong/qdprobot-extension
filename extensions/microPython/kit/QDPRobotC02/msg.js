/* eslint-disable func-style */
/* eslint-disable require-jsdoc */
function addMsg (Blockly) {
    Object.assign(Blockly.ScratchMsgs.locales.en, {
        QH_BUTTON_LABEL:'---BUTTON---',
        QH_SENSOR_LABEL:'---SENSOR---',
        QH_SERVO_LABEL:'---SERVO---',
        QH_DCMOTO_LABEL:'---DCMOTOR---',
        QH_C02_SENSOR_CATEGORY:'Sensor',
        QH_ACTUATOR_CATEGORY:'Actuator',
        QH_COMMUNICATE_CATEGORY:'Communicate',
        QH_OTHER_CATEGORY:'Other',
        QH_SET_CATEGORY:'Set',
        QH_CONTROL_CATEGORY:'Control',
        PY_QDP_inout_esp32_touchRead:'Touch Pin # %1 value',
        PY_qdp_esp32_buttonl:'Button Port %1',
        PY_qdp_esp32_buttonx:'Right or left button Port %1',
        qdp_esp32_chaoshengboI2C:'QH Utrasonic ranging(IIC)',
        qdp_esp32_chaoshengboSerial:'QH Utrasonic ranging %1 Port %2',
        PY_qdp_esp32_grayscale:'Line follower Port %1 Left %2 Right %3',
        PY_qdp_esp32_lightSensor:'Light sensor Port %1',
        PY_qdp_esp32_sound:'Sound sensor Port %1',
        PY_qdp_esp32_potentiometer:'Potentiometer sensor Port %1',
        PY_qdp_esp32_Soilmoisture:'Soil rainwater moisture port %1',
        QH_Accel_X:"X Axis Accel", 
        QH_Accel_Y:"Y Axis Accel", 
        QH_Accel_Z:"Z Axis Accel",
        QH_Gyro_X:"X Gyro Accel",
        QH_Gyro_Y:"Y Gyro Accel",
        QH_Gyro_Z:"Z Gyro Accel",
        QH_readTempC:"Temperature",
        qdp_esp32_ledlight:'LED light Port %1 state %2',
        qdp_esp32_read_ledlight:'Read LED light Port %1',
        PY_qdp_esp32_ledlight3:'LED Port %1 Value(0~1023) %2',
        PY_qdp_esp32_motor:'DC motor Port %1 connect %2 speed(-255~255) %3',
        PY_qdp_esp32_servomotor_360:'Servo 360° Port %1 Speed(-10~10) %2 ',
        PY_qdp_esp32_servomotor_180:'Servo 180° Port %1 Angle(0~180) %2 ',
        qdp_c02_py_rgb_set_color:'RGB LED Port %1 total %2  lamp No %3 R %4 G %5 B %6',
        qdp_c02_py_rgb_write:'RGB Port %1 RGB write',
        python_del:'del %1',
        python_in:'%1 is %2 in?',
        PY_time_ticks:'System run time %1',
        PY_time_ms:'ms',
        PY_time_us:'us'

    });
    Object.assign(Blockly.ScratchMsgs.locales['zh-cn'], {
        QH_BUTTON_LABEL:'---按钮---',
        QH_SENSOR_LABEL:'---传感器---',
        QH_SERVO_LABEL:'---舵机---',
        QH_DCMOTO_LABEL:'---直流电机---',
        QH_C02_SENSOR_CATEGORY:'传感器',
        QH_ACTUATOR_CATEGORY:'执行器',
        QH_COMMUNICATE_CATEGORY:'通讯',
        QH_OTHER_CATEGORY:'其它',
        QH_SET_CATEGORY:'集合',
        QH_CONTROL_CATEGORY:'控制',
        PY_QDP_inout_esp32_touchRead:'触摸 端口 # %1 的值',
        PY_qdp_esp32_buttonl:'按钮 端口 %1',
        PY_qdp_esp32_buttonx:'左或右 按钮 端口 %1',
        qdp_esp32_chaoshengboI2C:'QH 超声波测距(IIC)',
        qdp_esp32_chaoshengboSerial:'QH 超声波测距 %1 端口 %2',
        PY_qdp_esp32_grayscale:'巡线 端口 %1 左路 %2 右路 %3',
        PY_qdp_esp32_lightSensor:'光线传感器 端口 %1',
        PY_qdp_esp32_sound:'声音传感器 端口 %1',
        PY_qdp_esp32_potentiometer:'电位传感器 端口 %1',
        PY_qdp_esp32_Soilmoisture:'土壤雨水湿度 端口 %1',
        QH_Accel_X:"X轴加速度", 
        QH_Accel_Y:"Y轴加速度", 
        QH_Accel_Z:"Z轴加速度",
        QH_Gyro_X:"X轴角度",
        QH_Gyro_Y:"Y轴角度",
        QH_Gyro_Z:"Z轴角度",
        QH_readTempC:"温度",
        qdp_esp32_ledlight:'LED 端口 %1 状态 %2',
        qdp_esp32_read_ledlight:'读取 LED 端口 %1',
        PY_qdp_esp32_ledlight3:'LED 端口 %1 值(0~1023) %2',
        PY_qdp_esp32_motor:'直流电机 端口 %1 连接 %2 速度(-255~255) %3',
        PY_qdp_esp32_servomotor_360:'舵机360° 端口 %1 速度(-10~10) %2',
        PY_qdp_esp32_servomotor_180:'舵机180° 端口 %1 角度(0~180) %2 ',
        qdp_c02_py_rgb_set_color:'RGB LED 端口 %1 总数 %2  灯号 %3 R %4 G %5 B %6',
        qdp_c02_py_rgb_write:'RGB 引脚 %1 颜色写入',
        python_del:'删除 %1',
        python_in:'%1 是否在 %2 内?',
        PY_time_ticks:'系统运行时间 %1',
        PY_time_ms:'毫秒',
        PY_time_us:'微秒'
    });
    Object.assign(Blockly.ScratchMsgs.locales["zh-tw"], {
        QH_BUTTON_LABEL:'---按鈕---',
        QH_SENSOR_LABEL:'---感測器---',
        QH_SERVO_LABEL:'---舵機---',
        QH_DCMOTO_LABEL:'---直流電機---',
        QH_C02_SENSOR_CATEGORY:'感測器',
        QH_ACTUATOR_CATEGORY:'執行器',
        QH_COMMUNICATE_CATEGORY:'通訊',
        QH_OTHER_CATEGORY:'其他',
        QH_SET_CATEGORY:'集合',
        QH_CONTROL_CATEGORY:'控制',
        PY_QDP_inout_esp32_touchRead:'觸摸 端口 # %1 的值',
        PY_qdp_esp32_buttonl:'按鈕 端口 %1',
        PY_qdp_esp32_buttonx:'左或右 按鈕 端口 %1',
        qdp_esp32_chaoshengboI2C:'QH 超聲波測距(IIC)',
        qdp_esp32_chaoshengboSerial:'QH 超聲波測距 %1 端口 %2',
        PY_qdp_esp32_grayscale:'巡線 端口 %1 左路 %2 右路 %3',
        PY_qdp_esp32_lightSensor:'光線感測器 端口 %1',
        PY_qdp_esp32_sound:'聲音感測器 端口 %1',
        PY_qdp_esp32_potentiometer:'電位感測器 端口 %1',
        PY_qdp_esp32_Soilmoisture:'土壤雨水濕度 端口 %1',
        QH_Accel_X:"X軸加速度", 
        QH_Accel_Y:"Y軸加速度", 
        QH_Accel_Z:"Z軸加速度",
        QH_Gyro_X:"X軸角度",
        QH_Gyro_Y:"Y軸角度",
        QH_Gyro_Z:"Z軸角度",
        QH_readTempC:"溫度",
        qdp_esp32_ledlight:'LED 端口 %1 狀態 %2',
        qdp_esp32_read_ledlight:'讀取 LED 端口 %1',
        PY_qdp_esp32_ledlight3:'LED 端口 %1 值(0~1023) %2',
        PY_qdp_esp32_motor:'直流電機 端口 %1 連接 %2 速度(-255~255) %3',
        PY_qdp_esp32_servomotor_360:'舵機360° 端口 %1 速度(-10~10) %2',
        PY_qdp_esp32_servomotor_180:'舵機180° 端口 %1 角度(0~180) %2 ',
        qdp_c02_py_rgb_set_color:'RGB LED 端口 %1 總數 %2  燈號 %3 R %4 G %5 B %6',
        qdp_c02_py_rgb_write:'RGB 引腳 %1 顏色寫入',
        python_del:'刪除 %1',
        python_in:'%1 是否在 %2 內?',
        PY_time_ticks:'系統運行時間 %1',
        PY_time_ms:'毫秒',
        PY_time_us:'微秒'
    });
    return Blockly;
}

exports = addMsg;
