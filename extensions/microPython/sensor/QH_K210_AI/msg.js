/* eslint-disable func-style */
/* eslint-disable require-jsdoc */
function addMsg (Blockly) {
    Object.assign(Blockly.ScratchMsgs.locales.en, {
        QH_IMG_BASE_CATEGORY:'Image base',
        QH_IMG_DRAW_CATEGORY:'Image draw',
        QH_IMG_FILTE_CATEGORY:'Image filte',
        QH_IMG_SHAPE_CATEGORY:'Image shape',
        QH_IMG_COLOR_CATEGORY:'Image color',
        QH_IMG_CODE_CATEGORY:' Code identification',
        QH_IMG_COLOR_CONVERSION:'Color conversion',
        QH_IMG_FEATURES_CATEGORY:'Image feature',
        QH_IMG_FACE_CATEGORY:'Face recognition',
        PY_qdp_k210_image_font_load:'Image load font file width %1 height %2 path %3 encoding %4',
        PY_qdp_k210_image_Image1:'Create empty image width %1 height %2',
        PY_qdp_k210_image_Image:'Open the image from %1',
        PY_qdp_k210_image_clear:'%1 Image clear',
        PY_qdp_k210_image_save:'Save Image Save %1 to path %2',
        PY_qdp_k210_image_getinfo:'Gets %2 of %1',
        width:'width',
        height:'height',
        format:'format',
        size:'size',
        PY_qdp_k210_image_copy:'Truncate image ROI (xywh) %2 from %1',
        PY_qdp_k210_image_compress:'Compressed image %1 compression ratio %2',
        PY_qdp_k210_image_tonew:'Image conversion converts %1 to %2',
        to_grayscale:'grayscale:',
        to_rgb565:'rgb565',
        to_rainbow:'rainbow',
        pix_to_ai:'AI',
        PY_qdp_k210_image_get_pixel:'Get pixel data %1 postion(xy) %2',
        PY_qdp_k210_image_set_pixel:'Set pixel data %1 coordinates XY %2 color %3',
        PY_qdp_k210_image_draw_string:'Draws TEXT %1 X %2 Y %3 COLOR %4 FONT SIZE %5 WORD SPACING %6 LINE SPACING %7 FIXED TEXT SPACING %8 CONTENT %9',
        yes:'yes',
        no:'no',
        PY_qdp_k210_image_draw_image:'Draw image at %1 Draw image %2 with the coordinates xy%3 X scaling %4,Y scaling %5',
        PY_qdp_k210_image_draw_font:'Draw FONT %1 X %2 Y %3 WIDTH %4 HEIGHT %5 SCALE %6 COLOR %7 CONTENT %8',
        PY_qdp_k210_image_draw_line:'Draw line %1 starting and ending points (X1, Y1, X2, Y2) %2 color %3 thickness %4',
        PY_qdp_k210_image_draw_arrow:'Draw arrow %1 starting and ending points (X1, Y1, X2, Y2) %2 color %3 thickness %4',
        PY_qdp_k210_image_draw_cross:'Draw CROSS %1 COORDINATES (X, Y) %2 COLOR %3 SIZE %4 THICKNESS %5',
        PY_qdp_k210_image_draw_circle:'Draw circle %1 coordinates radius (X, Y, R) %2 color %3 thickness %4 Fill %5',
        PY_qdp_k210_image_draw_rectangle:'Draw rectangle %1 coordinates WIDTH HEIGHT (X, Y, W, H) %2 COLOR %3 THICKNESS %4 FILL %5',
        PY_qdp_k210_image_draw_keypoints:'Draw feature point %1 Feature point pair image %2 COLOR %3 SIZE %4 thickness %5 Fill %6',
        PY_qdp_k210_image_lens_corr:'Correction scaling %1 Correction %2 scaling %3',
        PY_qdp_k210_image_histeq:'Histogram equalization %1 adaptive %2 clip limit %3',
        PY_qdp_k210_image_mean:'Fuzzy filter %1 convolution kernel %2 adaptive %3 compensation %4',
        PY_qdp_k210_image_cartoon:'Cartoon filter %1 original difference %2 adjacent difference %3',
        PY_qdp_k210_image_erode:'Image corrosion %1 convolution kernel %2 threshold %3',
        PY_qdp_k210_image_dilate:'Image dilation %1 convolution kernel %2 threshold %3',
        PY_qdp_k210_image_flood_fill:'Image FILL %1 START COORDINATES %2 COLOR %3 Original DIFFERENCE %4 Adjacent DIFFERENCE %5 REVERSE %6 CLEAR %7',
        PY_qdp_k210_image_linpolar:'Image linpolar %1 Vertical projection? %2',
        PY_qdp_k210_image_invert:'Image inversion %1',
        PY_qdp_k210_image_line:'Linear analytical %1 get %2',
        PY_qdp_k210_image_circle:'Circle analytical %1 get %2',
        PY_qdp_k210_image_rect:'Rect analytical %1 get %2',
        line_pos:'Pos(x1, y1, x2, y2)',
        line_length:'length',
        line_theta:'theta',
        line_rho:'rho',
        magnitude:'magnitude',
        rect_corners:'corners',
        rect_rect:'rect(x,y,w,h)',
        PY_qdp_k210_image_find_lines:'Line recognition image %1 region (X, Y, W, H) %2 threshold %3 Merge Angle %4 Merge slope %5',
        PY_qdp_k210_image_find_line_segments:'Line segment recognition image %1 region (X, Y, W, H) %2 spacing %3 Merge Angle %4',
        PY_qdp_k210_image_find_circles:'Circular recognition image %1 region (X, Y, W, H) %2 threshold %3 Max R %4 min R %5 Step size R %6 Merge X value %7 merge Y value %8 merge R value %9',
        PY_qdp_k210_image_find_rects:'Rectangle recognition image %1 region (X, Y, W, H) %2 threshold %3',
        PY_qdp_k210_image_rgb_to_lab:'Color conversion RGB->LAB %1',
        PY_qdp_k210_image_lab_to_rgb:'Color conversion LAB->RGB %1',
        PY_qdp_k210_image_rgb_to_grayscale:'Color conversion RGB->GRAY %1',
        PY_qdp_k210_image_grayscale_to_rgb:'Color conversion GRAY->RGB %1',
        PY_qdp_k210_image_blob:'Blob analytical %1 get %2',
        PY_qdp_k210_image_percentile:'Histogram percentile analytical %1 CDF %2 get %3',
        blob_rect:'rect(x, y, w, h) ',
        blob_pixels:'pixel',
        blob_cx:'cx',
        blob_cy:'cy',
        blob_rotation:'rotation',
        blob_code:'code',
        blob_count:'count',
        blob_area:'area',
        blob_density:'density',
        percentile_value:'value(0-255)',
        percentile_l_value:'L value(0-100)',
        percentile_a_value:'A value(-128~127)',
        percentile_b_value:'B value(-128~127)',       
        PY_qdp_k210_image_find_blobs:'Find blob recognition %1 Threshold LAB %2 region [X, Y, W, H] %3 Filter region %4 Filter pixels %5 Merge %6 overlap %7',
        PY_qdp_k210_image_get_histogram:'Get histogram %1 ROI %2',
        PY_qdp_k210_image_barcode:'Bar code parsing %1 get %2',
         barcode_rect:'rect',
        barcode_payload:'payload',
        barcode_type:'type',
        barcode_rotation:'rotation',
        PY_qdp_k210_image_qrcode:'QR code parsing %1 get %2',
        QRCODE_VERSION:'version',
        QRCODE_MASK:'mask',
        PY_qdp_k210_image_apriltag:'AprilTag parsing %1 get %2',
        APRILTAG_ID:'ID',
        APRILTAG_FAMILY:'family',
        X_TRANSLATION:'X translation',
        Y_TRANSLATION:'Y translation',
        Z_TRANSLATION:'Z translation',
        X_ROTATION:'X rotation',
        Y_ROTATION:'Y rotation',
        Z_ROTATION:'Z rotation',
        PY_qdp_k210_image_find_barcodes:'Barcode recognition %1 area %2',
        PY_qdp_k210_image_find_qrcodes:'QRcode recognition %1 area %2',
        PY_qdp_k210_image_find_apriltags:'AprilTags recognition %1 area %2',
        PY_qdp_k210_image_kptmatch:'kptmatch info %1 get %2',
        KPTMATCH_MATCH:'key point',
        PY_qdp_k210_image_find_hog:'Find hog %1 area %2 line leader %3',
        PY_qdp_k210_image_find_keypoints:'Feature recognition %1 area %2 max keypoints %3 threshold %4 scale factor %5 normalized %6',
        PY_qdp_k210_image_match_descriptor:'Feature compare obj 1 %1 obj 2 %2 threshold %3',
        PY_qdp_k210_tuple_facedata:'%1  Face name %2',
        PY_qdp_k210_face_init:'Face recognition init',
        PY_qdp_k210_face_training:'Face recognition model training face name %1 save path %2',
        PY_qdp_k210_face_loading:'Face recognition model loading face name %1 save path %2',
        PY_qdp_k210_face_predict:'Face recognition predict face name %1'

    });
    Object.assign(Blockly.ScratchMsgs.locales['zh-cn'], {
        QH_IMG_BASE_CATEGORY:'图像操作',
        QH_IMG_DRAW_CATEGORY:'图像绘制',
        QH_IMG_FILTE_CATEGORY:'图像滤波',
        QH_IMG_SHAPE_CATEGORY:'图像形状',
        QH_IMG_COLOR_CATEGORY:'图像颜色',
        QH_IMG_CODE_CATEGORY:'扫码识别',
        QH_IMG_COLOR_CONVERSION:'色彩转换',
        QH_IMG_FEATURES_CATEGORY:'图像特征',
        QH_IMG_FACE_CATEGORY:'人脸识别',
        PY_qdp_k210_image_font_load:'image加载字库 宽度%1 高度%2 路径%3 编码%4',
        PY_qdp_k210_image_Image1:'新建空图 宽度%1 高度%2',
        PY_qdp_k210_image_Image:'从 %1 打开图片',
        PY_qdp_k210_image_clear:'%1 清除图片',
        PY_qdp_k210_image_save:'保存图片 将 %1 保存到路径 %2',
        PY_qdp_k210_image_getinfo:'获取 %1 的 %2',
        width:'宽',
        height:'高',
        format:'格式',
        size:'尺寸',
        PY_qdp_k210_image_copy:'截取图片 从 %1 截取图片 区域(xywh) %2 ',
        PY_qdp_k210_image_compress:'压缩图片 %1 压缩率 %2',
        PY_qdp_k210_image_tonew:'图像转换 将%1转换为%2',
        to_grayscale:'灰度',
        to_rgb565:'彩色',
        to_rainbow:'彩虹',
        pix_to_ai:'AI格式',
        PY_qdp_k210_image_get_pixel:'获取像素点数据 %1 坐标xy %2',
        PY_qdp_k210_image_set_pixel:'设置像素点数据 %1 坐标xy %2 颜色 %3',
        PY_qdp_k210_image_draw_string:'绘制文本 %1 x %2 y %3 颜色 %4 字号 %5 字间距 %6 行间距 %7 文字固定间距 %8 内容 %9',
        yes:'是',
        no:'否',
        PY_qdp_k210_image_draw_image:'绘制图像 在%1绘制图像%2,坐标xy%3 X缩放 %4,Y缩放%5',
        PY_qdp_k210_image_draw_font:'绘制字模 %1 x %2 y %3 宽度 %4 高度 %5 缩放 %6 颜色 %7 内容 %8',
        PY_qdp_k210_image_draw_line:'绘制直线 %1 起点终点(x1,y1,x2,y2) %2 颜色 %3 粗细 %4',
        PY_qdp_k210_image_draw_arrow:'绘制箭头 %1 起点终点(x1,y1,x2,y2) %2 颜色 %3 粗细 %4',
        PY_qdp_k210_image_draw_cross:'绘制十字 %1 坐标(x,y) %2 颜色 %3 大小 %4 粗细 %5',        
        PY_qdp_k210_image_draw_circle:'绘制圆 %1 坐标半径(x,y,r) %2 颜色 %3 粗细 %4 填充 %5',
        PY_qdp_k210_image_draw_rectangle:'绘制矩形 %1 坐标 宽高(x,y,w,h) %2 颜色 %3 粗细 %4 填充 %5',
        PY_qdp_k210_image_draw_keypoints:'绘制特征点 %1 特征点对像 %2 颜色 %3 大小 %4 粗细 %5 填充 %6',
        PY_qdp_k210_image_lens_corr:'校正缩放 %1 校正值 %2 缩放值 %3',
        PY_qdp_k210_image_histeq:'直方图均衡 %1 自适应 %2 对比度限制 %3',
        PY_qdp_k210_image_mean:'模糊滤波 %1 卷积核 %2 自适应 %3 补偿 %4',
        PY_qdp_k210_image_cartoon:'卡通滤波 %1 原始差异 %2 相邻差异 %3',
        PY_qdp_k210_image_erode:'图像腐蚀 %1 卷积核 %2 阈值 %3',
        PY_qdp_k210_image_dilate:'图像膨胀 %1 卷积核 %2 阈值 %3',
        PY_qdp_k210_image_flood_fill:'图像填充 %1 开始坐标 %2 颜色 %3 原始差异 %4 相邻差异 %5 反转 %6 清除 %7',
        PY_qdp_k210_image_linpolar:'图像投影 %1 垂直投影? %2',
        PY_qdp_k210_image_invert:'图像反转 %1',
        PY_qdp_k210_image_line:'直线解析 %1 获取 %2',
        PY_qdp_k210_image_circle:'圆形解析 %1 获取 %2',
        PY_qdp_k210_image_rect:'矩形解析 %1 获取 %2',
        line_pos:'坐标(x1, y1, x2, y2)',
        line_length:'长度',
        line_theta:'角度',
        line_rho:'斜率',
        magnitude:'大小',
        rect_corners:'角点坐标',
        rect_rect:'坐标尺寸(x,y,w,h)',
        PY_qdp_k210_image_find_lines:'直线识别 图象 %1 区域(x,y,w,h) %2 阀值 %3 合并角度 %4 合并斜度 %5 ',
        PY_qdp_k210_image_find_line_segments:'线段识别 图象 %1 区域(x,y,w,h) %2 间距 %3 合并角度 %4',
        PY_qdp_k210_image_find_circles:'圆形识别 图像 %1 区域(x,y,w,h) %2 阀值 %3 最大R %4 最小R %5 步长R %6 合并X值 %7 合并Y值 %8合并R值 %9',
        PY_qdp_k210_image_find_rects:'矩形识别 图像 %1 区域(x,y,w,h) %2 阀值 %3 ',
        PY_qdp_k210_image_rgb_to_lab:'色彩转换 RGB->LAB %1',
        PY_qdp_k210_image_lab_to_rgb:'色彩转换 LAB->RGB %1',
        PY_qdp_k210_image_rgb_to_grayscale:'色彩转换 RGB->灰度 %1',
        PY_qdp_k210_image_grayscale_to_rgb:'色彩转换 灰度->RGB %1',
        PY_qdp_k210_image_blob:'色块解析 %1 获取 %2',
        PY_qdp_k210_image_percentile:'直方图百分比值解析 %1 CDF %2 获取 %3',
        blob_rect:'矩形(x, y, w, h) ',
        blob_pixels:'像素数量',
        blob_cx:'中心坐标X',
        blob_cy:'中心坐标Y',
        blob_rotation:'旋转',
        blob_code:'颜色代码',
        blob_count:'数量',
        blob_area:'面积',
        blob_density:'密度',
        percentile_value:'百分比(0-255)',
        percentile_l_value:'L通道(0-100)',
        percentile_a_value:'A通道(-128~127)',
        percentile_b_value:'B通道(-128~127)',
        PY_qdp_k210_image_find_blobs:'色块识别 %1 阈值LAB %2 区域 [x,y,w,h] %3 过滤区域 %4 过滤像素 %5 合并 %6 重叠 %7',
        PY_qdp_k210_image_get_histogram:'获取直方图 %1 区域 %2',
        PY_qdp_k210_image_barcode:'条形码解析 %1 获取 %2',
        barcode_rect:'位置',
        barcode_payload:'内容',
        barcode_type:'类型',
        barcode_rotation:'角度',
        PY_qdp_k210_image_qrcode:'二维码解析 %1 获取 %2',
        QRCODE_VERSION:'版本',
        QRCODE_MASK:'掩码',
        PY_qdp_k210_image_apriltag:'AprilTag 解析 %1 获取 %2',
        APRILTAG_ID:'编码',
        APRILTAG_FAMILY:'家族',
        X_TRANSLATION:'X距离',
        Y_TRANSLATION:'Y距离',
        Z_TRANSLATION:'Z距离',
        X_ROTATION:'X弧度',
        Y_ROTATION:'Y弧度',
        Z_ROTATION:'Z弧度',
        PY_qdp_k210_image_find_barcodes:'条形码识别 %1 区域 %2',
        PY_qdp_k210_image_find_qrcodes:'二维码识别 %1 区域 %2',
        PY_qdp_k210_image_find_apriltags:'AprilTags识别 %1 区域 %2',
        PY_qdp_k210_image_kptmatch:'特征点信息 %1 获取 %2',
        KPTMATCH_MATCH:'关键点',
        PY_qdp_k210_image_find_hog:'寻找定向梯度图 %1 区域 %2 线长 %3',
        PY_qdp_k210_image_find_keypoints:'特征识别 %1 区域 %2 关键点数 %3 角点数 %4 比例因子 %5 多比例 %6',
        PY_qdp_k210_image_match_descriptor:'特征比较 对象1 %1 对象2 %2 相似度 %3',
        PY_qdp_k210_tuple_facedata:'%1 人脸名称 %2',
        PY_qdp_k210_face_init:'人脸识别 初始化',
        PY_qdp_k210_face_training:'人脸识别 模型训练 人脸名称 %1 保存路径 %2',
        PY_qdp_k210_face_loading:'人脸识别 模型加载 人脸名称 %1 保存路径 %2',
        PY_qdp_k210_face_predict:'人脸识别 运行模型 人脸名称 %1'


    });
    Object.assign(Blockly.ScratchMsgs.locales["zh-tw"], {
        QH_IMG_BASE_CATEGORY:'圖像操作',
        QH_IMG_DRAW_CATEGORY:'圖像繪製',
        QH_IMG_FILTE_CATEGORY:'圖像濾波',
        QH_IMG_SHAPE_CATEGORY:'圖像形狀',
        QH_IMG_COLOR_CATEGORY:'圖像顏色',
        QH_IMG_CODE_CATEGORY:'掃碼識別',
        QH_IMG_COLOR_CONVERSION:'色彩轉換',
        QH_IMG_FEATURES_CATEGORY:'圖像特徵',
        QH_IMG_FACE_CATEGORY:'人臉識別',
        PY_qdp_k210_image_font_load:'image加載字形檔 寬度%1 高度%2 路徑%3 編碼%4',
        PY_qdp_k210_image_Image1:'新建空圖 寬度%1 高度%2',
        PY_qdp_k210_image_Image:'從 %1 打開圖片',
        PY_qdp_k210_image_clear:'%1 清除圖片',
        PY_qdp_k210_image_save:'保存圖片 將 %1 保存到路徑 %2',
        PY_qdp_k210_image_getinfo:'獲取 %1 的 %2',
        width:'寬',
        height:'高',
        format:'格式',
        size:'尺寸',
        PY_qdp_k210_image_copy:'截取圖片 從 %1 截取圖片 區域(xywh) %2 ',
        PY_qdp_k210_image_compress:'壓縮圖片 %1 壓縮率 %2',
        PY_qdp_k210_image_tonew:'圖像轉換 將%1轉換為%2',
        to_grayscale:'灰度',
        to_rgb565:'彩色',
        to_rainbow:'彩虹',
        pix_to_ai:'AI格式',
        PY_qdp_k210_image_get_pixel:'獲取像素點數據 %1 座標xy %2',
        PY_qdp_k210_image_set_pixel:'設置像素點數據 %1 座標xy %2 顏色 %3',
        PY_qdp_k210_image_draw_string:'繪製文本 %1 x %2 y %3 顏色 %4 字型大小 %5 字間距 %6 行間距 %7 文字固定間距 %8 內容 %9',
        yes:'是',
        no:'否',
        PY_qdp_k210_image_draw_image:'繪製圖像 在%1繪製圖像%2,座標xy%3 X縮放 %4,Y縮放%5',
        PY_qdp_k210_image_draw_font:'繪製字模 %1 x %2 y %3 寬度 %4 高度 %5 縮放 %6 顏色 %7 內容 %8',
        PY_qdp_k210_image_draw_line:'繪製直線 %1 起點終點(x1,y1,x2,y2) %2 顏色 %3 粗細 %4',
        PY_qdp_k210_image_draw_arrow:'繪製箭頭 %1 起點終點(x1,y1,x2,y2) %2 顏色 %3 粗細 %4',
        PY_qdp_k210_image_draw_cross:'繪製十字 %1 座標(x,y) %2 顏色 %3 大小 %4 粗細 %5',        
        PY_qdp_k210_image_draw_circle:'繪製圓 %1 座標半徑(x,y,r) %2 顏色 %3 粗細 %4 填充 %5',
        PY_qdp_k210_image_draw_rectangle:'繪製矩形 %1 座標 寬高(x,y,w,h) %2 顏色 %3 粗細 %4 填充 %5',
        PY_qdp_k210_image_draw_keypoints:'繪製特徵點 %1 特徵點對像 %2 顏色 %3 大小 %4 粗細 %5 填充 %6',
        PY_qdp_k210_image_lens_corr:'校正縮放 %1 校正值 %2 縮放值 %3',
        PY_qdp_k210_image_histeq:'直方圖均衡 %1 自適應 %2 對比度限制 %3',
        PY_qdp_k210_image_mean:'模糊濾波 %1 卷積核 %2 自適應 %3 補償 %4',
        PY_qdp_k210_image_cartoon:'卡通濾波 %1 原始差異 %2 相鄰差異 %3',
        PY_qdp_k210_image_erode:'圖像腐蝕 %1 卷積核 %2 閾值 %3',
        PY_qdp_k210_image_dilate:'圖像膨脹 %1 卷積核 %2 閾值 %3',
        PY_qdp_k210_image_flood_fill:'圖像填充 %1 開始座標 %2 顏色 %3 原始差異 %4 相鄰差異 %5 反轉 %6 清除 %7',
        PY_qdp_k210_image_linpolar:'圖像投影 %1 垂直投影? %2',
        PY_qdp_k210_image_invert:'圖像反轉 %1',
        PY_qdp_k210_image_line:'直線解析 %1 獲取 %2',
        PY_qdp_k210_image_circle:'圓形解析 %1 獲取 %2',
        PY_qdp_k210_image_rect:'矩形解析 %1 獲取 %2',
        line_pos:'座標(x1, y1, x2, y2)',
        line_length:'長度',
        line_theta:'角度',
        line_rho:'斜率',
        magnitude:'大小',
        rect_corners:'角點座標',
        rect_rect:'座標尺寸(x,y,w,h)',
        PY_qdp_k210_image_find_lines:'直線識別 圖象 %1 區域(x,y,w,h) %2 閥值 %3 合併角度 %4 合併斜度 %5 ',
        PY_qdp_k210_image_find_line_segments:'線段識別 圖象 %1 區域(x,y,w,h) %2 間距 %3 合併角度 %4',
        PY_qdp_k210_image_find_circles:'圓形識別 圖像 %1 區域(x,y,w,h) %2 閥值 %3 最大R %4 最小R %5 步長R %6 合併X值 %7 合併Y值 %8合併R值 %9',
        PY_qdp_k210_image_find_rects:'矩形識別 圖像 %1 區域(x,y,w,h) %2 閥值 %3 ',
        PY_qdp_k210_image_rgb_to_lab:'色彩轉換 RGB->LAB %1',
        PY_qdp_k210_image_lab_to_rgb:'色彩轉換 LAB->RGB %1',
        PY_qdp_k210_image_rgb_to_grayscale:'色彩轉換 RGB->灰度 %1',
        PY_qdp_k210_image_grayscale_to_rgb:'色彩轉換 灰度->RGB %1',
        PY_qdp_k210_image_blob:'色塊解析 %1 獲取 %2',
        PY_qdp_k210_image_percentile:'直方圖百分比值解析 %1 CDF %2 獲取 %3',
        blob_rect:'矩形(x, y, w, h) ',
        blob_pixels:'像素數量',
        blob_cx:'中心座標X',
        blob_cy:'中心座標Y',
        blob_rotation:'旋轉',
        blob_code:'顏色代碼',
        blob_count:'數量',
        blob_area:'面積',
        blob_density:'密度',
        percentile_value:'百分比(0-255)',
        percentile_l_value:'L通道(0-100)',
        percentile_a_value:'A通道(-128~127)',
        percentile_b_value:'B通道(-128~127)',
        PY_qdp_k210_image_find_blobs:'色塊識別 %1 閾值LAB %2 區域 [x,y,w,h] %3 過濾區域 %4 過濾像素 %5 合併 %6 重疊 %7',
        PY_qdp_k210_image_get_histogram:'獲取直方圖 %1 區域 %2',
        PY_qdp_k210_image_barcode:'條碼解析 %1 獲取 %2',
        barcode_rect:'位置',
        barcode_payload:'內容',
        barcode_type:'類型',
        barcode_rotation:'角度',
        PY_qdp_k210_image_qrcode:'二維碼解析 %1 獲取 %2',
        QRCODE_VERSION:'版本',
        QRCODE_MASK:'掩碼',
        PY_qdp_k210_image_apriltag:'AprilTag 解析 %1 獲取 %2',
        APRILTAG_ID:'編碼',
        APRILTAG_FAMILY:'家族',
        X_TRANSLATION:'X距離',
        Y_TRANSLATION:'Y距離',
        Z_TRANSLATION:'Z距離',
        X_ROTATION:'X弧度',
        Y_ROTATION:'Y弧度',
        Z_ROTATION:'Z弧度',
        PY_qdp_k210_image_find_barcodes:'條碼識別 %1 區域 %2',
        PY_qdp_k210_image_find_qrcodes:'二維碼識別 %1 區域 %2',
        PY_qdp_k210_image_find_apriltags:'AprilTags識別 %1 區域 %2',
        PY_qdp_k210_image_kptmatch:'特徵點資訊 %1 獲取 %2',
        KPTMATCH_MATCH:'關鍵點',
        PY_qdp_k210_image_find_hog:'尋找定向梯度圖 %1 區域 %2 線長 %3',
        PY_qdp_k210_image_find_keypoints:'特徵識別 %1 區域 %2 關鍵點數 %3 角點數 %4 比例因數 %5 多比例 %6',
        PY_qdp_k210_image_match_descriptor:'特徵比較 對象1 %1 對象2 %2 相似度 %3',
        PY_qdp_k210_tuple_facedata:'%1 人臉名稱 %2',
        PY_qdp_k210_face_init:'人臉識別 初始化',
        PY_qdp_k210_face_training:'人臉識別 模型訓練 人臉名稱 %1 保存路徑 %2',
        PY_qdp_k210_face_loading:'人臉識別 模型加載 人臉名稱 %1 保存路徑 %2',
        PY_qdp_k210_face_predict:'人臉識別 運行模型 人臉名稱 %1'

   
    });
    return Blockly;
}

exports = addMsg;
